# network size
SIZE 300

# parameters of periodic execution
CYCLES 1000
CYCLE 10

MINDELAY 0
MAXDELAY 0
# drop is a probability, 0<=DROP<=1
DROP 0

random.seed 123456789
network.size SIZE
simulation.endtime CYCLE * CYCLES
#simulation.logtime CYCLE

################### protocols ===========================
protocol.link peersim.core.IdleProtocol

protocol.cep peersim.distributed.algorithm2.AdaptiveCepProtocol
protocol.cep.linkable link
#step is to specify how long is a cycle
protocol.cep.step CYCLE
protocol.cep.transport tr
protocol.cep.adaptiveLatency false
protocol.cep.adaptiveBandwidth true

protocol.urt peersim.transport.UniformRandomTransport
protocol.urt.mindelay (CYCLE*MINDELAY)/100
protocol.urt.maxdelay (CYCLE*MAXDELAY)/100

protocol.tr peersim.transport.UnreliableTransport
protocol.tr.transport urt
protocol.tr.drop DROP

################### initialization ======================
include.init rndlink sch ani
init.rndlink peersim.dynamics.WireKOut
init.rndlink.k 11
init.rndlink.protocol link

init.sch peersim.edsim.CDScheduler
init.sch.protocol cep
init.sch.randstart

init.ani peersim.distributed.algorithm2.DistributedNetworkInitializer
init.ani.protocol cep

################ control ==============================
##Used to calculate total number of tentative operators available in the entire network
#control.0 peersim.distributed.algorithm1.NetworkObserver
#control.0.protocol cep
#control.0.step CYCLE